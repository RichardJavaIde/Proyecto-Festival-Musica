npm init => inicia el archivo package.json donde se deglusan las dependecias del proyecto.
Eje:
"name": "festivalmusica_inicio1",
  "version": "1.0.0",
  "description": "Proyecto con Sass y Gulp",
  "main": "index.js",
"author": "Richard Duran",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/RichardJavaIde/Proyecto-Festival-Musica/issues"
"keywords": [
    "SASS",
    "GULP"
  ],

npm install sass => instalamos SASS pero tambien creamos la carpera src y dendro de esta scss con el archivo app.scss

npm run sass => este es para ejecutar el script que esta el package.json el que se llama sass.

"scripts": {
    "sass": "sass --watch src/scss:build/css",
    "tarea": "gulp tarea"
  },

npm i -D gulp => este es para instalar GULP para desarollo y de paso hay que crear el archivo gulpfile.js en la raiz del proyecto.

npx gulp tarea => este es para ejecutar funciones que estan detro del archivo gulpfile.js

function tarea(done) {
  console.log("mi primer tarea");

  done();
}

npm run tarea = este es para ejecutar scripts que estan dentro de package.json pero (tarea) pertenese a gulp entonses
de esta aforma llamamos un achivo de gulp con el archivo package.json.

"scripts": {
    "sass": "sass --watch src/scss:build/css",
    "tarea": "gulp tarea"
  },

npm i -D gulp-sass => este es un plugin para conectar gulp con sass
const sass = require("gulp-sass")(require("sass"));

*******
npm run dev => si quieres llamar funciones de gulp tienes que escribirla en scripts o usa npx gulp dev
*******


npm i --save-dev gulp-plumber ==> dependencia // este plugin es para que no detenga la ejecucion del watch cuando alga un eror y muestre el eror.

npm i --save-dev gulp-webp ==> funcion para convertir imagenes a webp

npm i --save-dev gulp-imagemin@7.1.0 ==> este es para aligerar las imanegenes jpg y png es te va a compallado de otro plugin llamado cache.
npm i --save-dev gulp-cache

npm i --save-dev gulp-avif ==> este es para aligerar las imanegenes a formato avif

npm i --save-dev cssnano autoprefixer postcss gulp-postcss

autoprefixer hace que nuestro codigo css funcione bien en todos los navegadores.
cssnano comprime nuestro codigo css para que en el navegador sea mas rapido.
gulp-postcss hace algunas transformaciones atraves de autoprefixer cssnano.


npm i --save-dev gulp-sourcemaps

npm i --save-dev gulp-terser-js


